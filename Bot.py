import telebot
import cherrypy
import time
from telebot import types
from datetime import date, datetime
import random

# Dell bloxk with webhook type connection. Vova Mazep ‚úì 

class WebhookServer(object):
    @cherrypy.expose
    def index(self):
        if 'content-length' in cherrypy.request.headers and \
           'content-type' in cherrypy.request.headers and \
            cherrypy.request.headers['content-type'] == 'application/json':
            length = int(cherrypy.request.headers['content-length'])
            json_string = cherrypy.request.body.read(length).decode("utf-8")
            update = telebot.types.Update.de_json(json_string)
            bot.process_new_updates([update])
            return ''
        else:
            raise cherrypy.HTTPError(403)


btc_address = '1FkXRm2mG3afa8pnW5mAKbsYZHXe5rMf6a'
qiwi_adress = 60986531
btc = 647852
num_summa = 0
num_start = 0


def isfloat(value):
    try:
        float(value)
        return True
    except ValueError:
        return False


def kurs(message):
    global btc
    btc = int(message.text)


@bot.message_handler(commands=["start"])
def start(message):
    global num_start
    num_start += 1
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(*[types.KeyboardButton(name) for name in ['üíº –ö–æ—à–µ–ª–µ–∫', 'üìä –û–±–º–µ–Ω BTC', 'üöÄ –û —Å–µ—Ä–≤–∏—Å–µ', 'üìå –ê–∫—Ü–∏—è']])
    bot.send_message(message.chat.id, '‚úåÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å, ' + '<b>' + message.chat.first_name + '</b>' + '!\n\n'
                                      'üèß <b>Bit+Coin</b> - —ç—Ç–æ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –æ–±–º–µ–Ω <b>Bitcoin –Ω–∞ Qiwi, –°–±–µ—Ä–±–∞–Ω–∫,'
                                      ' –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏ –∏ Webmoney</b>\n\n'
                                      '‚ùï–ê —Ç–∞–∫ –∂–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –í–∞—à–∏—Ö <b>BTC</b>\n\n', reply_markup=keyboard, parse_mode="Html")


def summa(message):
    if message.text.isdigit():
        if int(message.text) < 500:
            sent = bot.send_message(message.chat.id, '‚ùå –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö <b>–Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ</b> 500 —Ä—É–±–ª–µ–π', parse_mode="Html")
            bot.register_next_step_handler(sent, summa)
        elif int(message.text) > 20000:
            sent = bot.send_message(message.chat.id, '‚ùå –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö <b>–Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ</b> 20000 —Ä—É–±–ª–µ–π', parse_mode="Html")
            bot.register_next_step_handler(sent, summa)
        else:
            money = float(message.text)/btc
            money = float("%.6f" % money)
            bot.send_message(message.chat.id, '‚úÖ ' + str(message.text) + ' RUB' + ' = ' + str(money) + ' BTC\n\n'
                                              '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ' + '<b>' + str(money) + ' BTC</b>' + ' –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å QIWI –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—É–º–º—É ' + '<b>' + str(message.text) + ' rub</b> '
                                              '–Ω–∞ —Å—á—ë—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –Ω–∏–∂–µ\n\n'
                                              '<b>‚ùóÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ</b>', parse_mode="Html")
            time.sleep(1)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ['‚úÖ –û–ø–ª–∞—Ç–∏–ª', '‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è']])
            bot.send_message(message.chat.id, qiwi_adress + '\n'
                                              '<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ' + str(random.randrange(1, 99999)) + '\n\n', reply_markup=keyboard, parse_mode="Html")
        return
    if isfloat(message.text):
        if (float(message.text)*btc) < 500:
            money = 500/btc
            money = float("%.6f" % money)
            sent = bot.send_message(message.chat.id, '‚ùå –°—É–º–º–∞ –≤ BTC <b>–Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ</b> ' + str(money) + ' BTC', parse_mode="Html")
            bot.register_next_step_handler(sent, summa)
        elif (float(message.text)*btc) > 20000:
            money = 20000/btc
            money = float("%.6f" % money)
            sent = bot.send_message(message.chat.id, '‚ùå –°—É–º–º–∞ –≤ BTC <b>–Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ</b> ' + str(money) + ' BTC', parse_mode="Html")
            bot.register_next_step_handler(sent, summa)
        else:
            money = float(message.text)*btc
            bot.send_message(message.chat.id, '‚úÖ ' + str(message.text) + ' BTC' + ' = ' + str(round(money)) + ' RUB\n\n'
                                              '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ' + '<b>' + str(message.text) + ' BTC</b>' + ' –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å QIWI –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—É–º–º—É ' + '<b>' + str(round(money)) + ' rub</b> '
                                              '–Ω–∞ —Å—á—ë—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –Ω–∏–∂–µ\n\n'
                                              '<b>‚ùóÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ</b>', parse_mode="Html")
            time.sleep(1)
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(*[types.KeyboardButton(name) for name in ['‚úÖ –û–ø–ª–∞—Ç–∏–ª', '‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è']])
            bot.send_message(message.chat.id, qiwi_adress + '\n'
                                              '<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ' + str(random.randrange(1, 99999)) + '\n\n', reply_markup=keyboard, parse_mode="Html")
        return
    elif message.text == 'üíº –ö–æ—à–µ–ª–µ–∫':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üìâ –í—ã–≤–µ—Å—Ç–∏ BTC', 'üìà –í–Ω–µ—Å—Ç–∏ BTC']])
        bot.send_message(message.chat.id, '<b>üíº Bitcoin-–∫–æ—à–µ–ª–µ–∫</b>\n\n'
                                          '<b>–ë–∞–ª–∞–Ω—Å:</b> 0.00 BTC\n'
                                          '<b>–ü—Ä–∏–º–µ—Ä–Ω–æ:</b> 0 —Ä—É–±\n\n'
                                          '<b>–í—Å–µ–≥–æ –≤—ã–≤–µ–ª–∏:</b> 0.00 BTC (0 —Ä—É–±)\n'
                                          '<b>–í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏:</b> 0.00 BTC (0 —Ä—É–±)\n', reply_markup=keyboard, parse_mode="Html")
        return
    elif message.text == 'üìä –û–±–º–µ–Ω BTC':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üìà –ö—É–ø–∏—Ç—å', 'üìâ –ü—Ä–æ–¥–∞—Ç—å']])
        bot.send_message(message.chat.id, 'üìä <b>–ö—É–ø–∏—Ç—å/–ü—Ä–æ–¥–∞—Ç—å Bitcoin</b>\n\n'
                                          '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤ <b>–∞—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ</b>. –°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø–∞—é—Ç –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ\n', reply_markup=keyboard, parse_mode="Html")
        return
    elif message.text == 'üöÄ –û —Å–µ—Ä–≤–∏—Å–µ':
        bot.send_message(message.chat.id, 'üöÄ <b>–û —Å–µ—Ä–≤–∏—Å–µ</b>\n\n'
                                          '–°–µ—Ä–≤–∏—Å –¥–ª—è –æ–±–º–µ–Ω–∞ Bitcoin.\n'
                                          '–ü–æ–ø–æ–ª–Ω—è–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—à–µ–ª–µ–∫ —Å –ø–æ–º–æ—â—å—é Qiwi –∏–ª–∏ –≤–Ω–µ—à–Ω–µ–≥–æ Bitcoin-–∫–æ—à–µ–ª—å–∫–∞\n\n'
                                          '–ü—Ä–æ–¥–∞–≤–∞–π —ç—Ç–∏ BTC –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫, –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏, Webmoney –∏ Qiwi. –ò–ª–∏ –≤—ã–≤–æ–¥–∏ –Ω–∞ —Å–≤–æ–π –≤–Ω–µ—à–Ω–∏–π Bitcoin-–∞–¥—Ä–µ—Å\n\n'
                                          '–£ –Ω–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ <b>(500 —Ä—É–±–ª–µ–π)</b> –∏ –º–∞–∫—Å–º–∞–ª—å–Ω–æ–≥–æ <b>(20000 —Ä—É–±–ª–µ–π)</b> –µ–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞\n\n', parse_mode="Html")
        return
    elif message.text == 'üìå –ê–∫—Ü–∏—è':
        bot.send_message(message.chat.id, 'üìå <b>–ê–∫—Ü–∏—è</b>\n\n'
                                          '<b>‚ùóÔ∏è–ú—ã —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ–º 0.25 BTC‚ùóÔ∏è</b>\n\n'
                                          '–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–∞–¥–æ –ª–∏—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º –≤ –ø–µ—Ä–∏–æ–¥ —Å <b>01.06.2020 –ø–æ 01.07.2020</b> –∏ –∏–º–µ—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ –º–µ–Ω–µ–µ <b> 0.001 BTC</b>\n\n'
                                          '–≠—Ç–æ—Ç –æ—Å—Ç–∞—Ç–æ–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –í–∞–º (–Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–ª–∞—Ç–æ–π –∑–∞ —É—á–∞—Å—Ç–∏–µ), –ø–æ—Å–ª–µ –∫–æ–Ω–∫—É—Ä—Å–∞, –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã, –Ω–∏–∫–∞–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è –≤–∑–∏–º–∞—Ç—å—Å—è –Ω–µ –±—É–¥–µ—Ç\n\n'
                                          '–¢–∞–∫–∂–µ <b>–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π @username</b>, –µ—Å–ª–∏ –æ–Ω —É –í–∞—Å –µ—â–µ –Ω–µ —É–∫–∞–∑–∞–Ω\n\n'
                                          '–û–ø—Ä–µ–¥–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ –ø—Ä—è–º–æ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ <b>YouTube 1 –∏—é–ª—è 2020 –≥–æ–¥–∞ –≤ 20:00 –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏</b>\n\n'
                                          '<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç 0.25 BTC –Ω–∞ —Å–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—à–µ–ª–µ–∫ –±–µ–∑ –∫–∞–∫–∏—Ö –ª–∏–±–æ –∫–æ–º–º–∏—Å—Å–∏–π!</b>\n\n'
                                          '–ó–∞ 3 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞ –í–∞–º –ø—Ä–∏–¥–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é\n\n', parse_mode="Html")
        return
    elif message.text == '/start':
        return
    else: 
        sent = bot.send_message(message.chat.id, '‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥</b>\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', parse_mode="Html")
        bot.register_next_step_handler(sent, summa)


def qiwi(chat_id):
    sent = bot.send_message(chat_id, 'üì• <b>Qiwi</b>\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ <b>BTC</b> –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ –≤ <b>—Ä—É–±–ª—è—Ö</b> –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: <b>0.002 –∏–ª–∏ 500</b>\n\n'
                                     '<b>‚ùóÔ∏è BTC –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É</b>\n\n–ö—É—Ä—Å –æ–±–º–µ–Ω–∞:\n<code>1 BTC = ' + str(btc) + ' RUB</code>', parse_mode="Html")
    bot.register_next_step_handler(sent, summa)


@bot.message_handler(content_types=["text"])
def key(message):
    if message.text == 'üíº –ö–æ—à–µ–ª–µ–∫':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üìâ –í—ã–≤–µ—Å—Ç–∏ BTC', 'üìà –í–Ω–µ—Å—Ç–∏ BTC']])
        bot.send_message(message.chat.id, '<b>üíº Bitcoin-–∫–æ—à–µ–ª–µ–∫</b>\n\n'
                                          '<b>–ë–∞–ª–∞–Ω—Å:</b> 0.00 BTC\n'
                                          '<b>–ü—Ä–∏–º–µ—Ä–Ω–æ:</b> 0 —Ä—É–±\n\n'
                                          '<b>–í—Å–µ–≥–æ –≤—ã–≤–µ–ª–∏:</b> 0.00 BTC (0 —Ä—É–±)\n'
                                          '<b>–í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏:</b> 0.00 BTC (0 —Ä—É–±)\n', reply_markup=keyboard, parse_mode="Html")
    elif message.text == 'üìä –û–±–º–µ–Ω BTC':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üìà –ö—É–ø–∏—Ç—å', 'üìâ –ü—Ä–æ–¥–∞—Ç—å']])
        bot.send_message(message.chat.id, 'üìä <b>–ö—É–ø–∏—Ç—å/–ü—Ä–æ–¥–∞—Ç—å Bitcoin</b>\n\n'
                                          '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤ <b>–∞—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ</b>. –°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø–∞—é—Ç –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ\n', reply_markup=keyboard, parse_mode="Html")
    elif message.text == 'üöÄ –û —Å–µ—Ä–≤–∏—Å–µ':
        bot.send_message(message.chat.id, 'üöÄ <b>–û —Å–µ—Ä–≤–∏—Å–µ</b>\n\n'
                                          '–°–µ—Ä–≤–∏—Å –¥–ª—è –æ–±–º–µ–Ω–∞ Bitcoin.\n'
                                          '–ü–æ–ø–æ–ª–Ω—è–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—à–µ–ª–µ–∫ —Å –ø–æ–º–æ—â—å—é Qiwi –∏–ª–∏ –≤–Ω–µ—à–Ω–µ–≥–æ Bitcoin-–∫–æ—à–µ–ª—å–∫–∞\n\n'
                                          '–ü—Ä–æ–¥–∞–≤–∞–π —ç—Ç–∏ BTC –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫, –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏, Webmoney –∏ Qiwi. –ò–ª–∏ –≤—ã–≤–æ–¥–∏ –Ω–∞ —Å–≤–æ–π –≤–Ω–µ—à–Ω–∏–π Bitcoin-–∞–¥—Ä–µ—Å\n\n'
                                          '–í –±–æ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ <b>(500 —Ä—É–±–ª–µ–π)</b> –∏ –º–∞–∫—Å–º–∞–ª—å–Ω–æ–≥–æ <b>(20000 —Ä—É–±–ª–µ–π)</b> –µ–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞\n\n', parse_mode="Html")
    elif message.text == 'üìå –ê–∫—Ü–∏—è':
        bot.send_message(message.chat.id, 'üìå <b>–ê–∫—Ü–∏—è</b>\n\n'
                                          '<b>‚ùóÔ∏è–ú—ã —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ–º 0.25 BTC‚ùóÔ∏è</b>\n\n'
                                          '–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º –≤ –ø–µ—Ä–∏–æ–¥ —Å <b>01.07.2020 –ø–æ 01.08.2020</b> –∏ –∏–º–µ—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ –º–µ–Ω–µ–µ <b>0.001 BTC</b>\n\n'
                                          '–≠—Ç–æ—Ç –æ—Å—Ç–∞—Ç–æ–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –í–∞–º (–Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–ª–∞—Ç–æ–π –∑–∞ —É—á–∞—Å—Ç–∏–µ). –ü–æ—Å–ª–µ –∫–æ–Ω–∫—É—Ä—Å–∞, –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã, –Ω–∏–∫–∞–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è –≤–∑–∏–º–∞—Ç—å—Å—è –Ω–µ –±—É–¥–µ—Ç\n\n'
                                          '–¢–∞–∫ –∂–µ <b>–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π @username</b>, –µ—Å–ª–∏ –æ–Ω —É –í–∞—Å –µ—â–µ –Ω–µ —É–∫–∞–∑–∞–Ω\n\n'
                                          '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ –ø—Ä—è–º–æ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ <b>YouTube 1 –∞–≤–≥—É—Å—Ç–∞ 2020 –≥–æ–¥–∞ –≤ 20:00 –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏</b>\n\n'
                                          '<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç 0.25 BTC –Ω–∞ —Å–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—à–µ–ª–µ–∫ –±–µ–∑ –∫–∞–∫–∏—Ö –ª–∏–±–æ –∫–æ–º–º–∏—Å—Å–∏–π!</b>\n\n'
                                          '–ó–∞ 3 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞ –í–∞–º –ø—Ä–∏–¥–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é\n\n', parse_mode="Html")
    elif message.text == '‚úÖ –û–ø–ª–∞—Ç–∏–ª':
        global num_summa
        num_summa += 1
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.add(*[types.KeyboardButton(name) for name in ['üíº –ö–æ—à–µ–ª–µ–∫', 'üìä –û–±–º–µ–Ω BTC', 'üöÄ –û —Å–µ—Ä–≤–∏—Å–µ', 'üìå –ê–∫—Ü–∏—è']])
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ\n'
                                          '–î–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –∫–æ—à–µ–ª—ë–∫', reply_markup=keyboard, parse_mode="Html")
        print('Username - ', message.chat.username, ' ', datetime.now(), '\n', '[', message.chat.first_name, ' ', message.chat.last_name, ' ', message.chat.id, ']\n')
        bot.send_message(439066847, message.chat.username)
    elif message.text == '‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.add(*[types.KeyboardButton(name) for name in ['üíº –ö–æ—à–µ–ª–µ–∫', 'üìä –û–±–º–µ–Ω BTC', 'üöÄ –û —Å–µ—Ä–≤–∏—Å–µ', 'üìå –ê–∫—Ü–∏—è']])
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ BTC –≤ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è!\n', reply_markup=keyboard, parse_mode="Html")
    elif message.text == 'How many':
        bot.send_message(message.chat.id, '–í—Å–µ–≥–æ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç: ' + str(num_start) + '\n'
                                          '‚úÖ –û–ø–ª–∞—Ç–∏–ª: ' + str(num_summa))
    elif message.text == '–ö—É—Ä—Å111':
        sent = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å btc')
        bot.register_next_step_handler(sent, kurs)


@bot.callback_query_handler(func=lambda c: True)
def inline(x):
    if x.data == 'üìà –ö—É–ø–∏—Ç—å':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üì• Qiwi', 'üì• Bitcoin']])
        bot.send_message(x.message.chat.id, 'üìà <b>–ö—É–ø–∏—Ç—å</b>\n\n'
                                            '–ü–æ–∫—É–ø–∫–∞ BTC –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å –ø–æ–º–æ—â—å—é <b>Qiwi</b> –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–π <b>Bitcoin-–∞–¥—Ä–µ—Å</b> —Å –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞\n\n'
                                            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n\n', reply_markup=keyboard, parse_mode="Html")
    elif x.data == 'üìâ –ü—Ä–æ–¥–∞—Ç—å':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['Qiwi', '–°–±–µ—Ä–±–∞–Ω–∫', 'Webmoney', '–Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏']])
        bot.send_message(x.message.chat.id, 'üìâ <b>–ü—Ä–æ–¥–∞—Ç—å</b>\n\n'
                                            '–ü—Ä–æ–¥–∞–∂–∞ BTC –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø—É—Ç—ë–º —Å–ø–∏—Å–∞–Ω–∏—è —Å –í–∞—à–µ–≥–æ <b>–≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ Bitcoin-–∫–æ—à–µ–ª—å–∫–∞</b> –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –í–∞–º–∏ –ø–ª–æ—â–∞–¥–∫—É\n'
                                            '–ö—É–¥–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ <b>BTC</b>?', reply_markup=keyboard, parse_mode="Html")
    elif x.data == 'üìâ –í—ã–≤–µ—Å—Ç–∏ BTC':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üìà –ö—É–ø–∏—Ç—å']])
        bot.send_message(x.message.chat.id, 'üìâ <b>–í—ã–≤–µ—Å—Ç–∏ BTC</b>\n\n‚ö†Ô∏è<b>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ BTC</b>\n'
                                            '–ú–∏–Ω. —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 0.0008 BTC', reply_markup=keyboard, parse_mode="Html")
    elif x.data == 'üìà –í–Ω–µ—Å—Ç–∏ BTC':
        bot.send_message(x.message.chat.id, 'üìà <b>–í–Ω–µ—Å—Ç–∏ BTC</b>\n\n–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å <b>Bitcoin-–∫–æ—à–µ–ª–µ–∫</b>, –í–∞–º –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –í–∞—à–∏ BTC –Ω–∞ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω –Ω–∏–∂–µ\n\n'
                                            '–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è 1 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –í–∞—à–∏ BTC –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —É –í–∞—Å –≤ –∫–æ—à–µ–ª—å–∫–µ\n'
                                            '–ò –≤—ã –∏—Ö —Å–º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –ª—é–±—É—é –¥—Ä—É–≥—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –∏–ª–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π Bitcoin-–∞–¥—Ä–µ—Å', parse_mode="Html")
        time.sleep(1)
        bot.send_message(x.message.chat.id, '<b>' + str(btc_address) + '</b>', parse_mode="Html")
    elif x.data == 'Qiwi' or x.data == '–°–±–µ—Ä–±–∞–Ω–∫' or x.data == '–Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏' or x.data == 'Webmoney':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['üìà –ö—É–ø–∏—Ç—å']])
        bot.send_message(x.message.chat.id, '‚ö†Ô∏è <b>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ BTC</b>\n'
                                            '–ú–∏–Ω. —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 0.0008 BTC', reply_markup=keyboard, parse_mode="Html")
    elif x.data == 'üì• Qiwi':
        qiwi(x.message.chat.id)
    elif x.data == 'üì• Bitcoin':
        bot.send_message(x.message.chat.id, 'üì• <b>Bitcoin</b>\n\n–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å <b>Bitcoin-–∫–æ—à–µ–ª–µ–∫</b>, –í–∞–º –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –í–∞—à–∏ BTC –Ω–∞ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω –Ω–∏–∂–µ\n\n'
                                            '–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è 1 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –í–∞—à–∏ BTC –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —É –í–∞—Å –≤ –∫–æ—à–µ–ª—å–∫–µ\n'
                                            '–ò –≤—ã –∏—Ö —Å–º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –ª—é–±—É—é –¥—Ä—É–≥—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –∏–ª–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π Bitcoin-–∞–¥—Ä–µ—Å', parse_mode="Html")
        time.sleep(0.3)
        bot.send_message(x.message.chat.id, '<b>' + str(btc_address) + '</b>', parse_mode="Html")


bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH, certificate=open(WEBHOOK_SSL_CERT, 'r'))

cherrypy.config.update({
    'server.socket_host': WEBHOOK_LISTEN,
    'server.socket_port': WEBHOOK_PORT,
    'server.ssl_module': 'builtin',
    'server.ssl_certificate': WEBHOOK_SSL_CERT,
    'server.ssl_private_key': WEBHOOK_SSL_PRIV
})

cherrypy.quickstart(WebhookServer(), WEBHOOK_URL_PATH, {'/': {}})